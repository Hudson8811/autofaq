{"version":3,"sources":["module.js"],"names":[],"mappingsfile":"../module.min.js","sourcesContent":["import * as THREE from 'three';\n//import { RoomEnvironment } from './jsm/environments/RoomEnvironment.js';\n//import { OrbitControls } from './jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from './jsm/loaders/GLTFLoader.js';\n//import { KTX2Loader } from 'js/jsm/loaders/KTX2Loader.js';\n//import { MeshoptDecoder } from './jsm/libs/meshopt_decoder.module.js';\n\nvar mouseX = 0, mouseY = 0;\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2;\n\n(function ($) {\n\n  $(document).ready(function () {\n\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n\n    function onDocumentMouseMove(event) {\n      mouseX = (event.clientX - windowHalfX) / 2;\n      mouseY = (event.clientY - windowHalfY) / 2;\n    }\n\n    if (window.innerWidth > 1200 && $('#myTurntable').length > 0) {\n      $('#myTurntable').turntable();\n    }\n\n    if (window.innerWidth > 1200 && $('#model3d').length > 0) {\n      let camera, controls, scene, renderer;\n      let camera2, controls2, scene2, renderer2;\n      let spotLight, spotLight2, spotLight3;\n      init();\n      animate();\n\n      function init() {\n        const container = document.getElementById('model3d');\n        const wrapper = document.getElementById('container3d');\n        renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\n        renderer.toneMapping = THREE.ACESFilmicToneMapping;\n        renderer.toneMappingExposure = 3;\n        renderer.setClearColor(0x000000, 0);\n        renderer.outputEncoding = THREE.sRGBEncoding;\n        renderer.shadowMap.enabled = true;\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        container.appendChild(renderer.domElement);\n\n        camera = new THREE.PerspectiveCamera(45, 1, 1, 1000);\n        camera.position.set(7.4, 0, 0);\n        camera.lookAt(0, 1, 0);\n\n        scene = new THREE.Scene();\n\n        const light = new THREE.AmbientLight(0x333333, 0.9);\n        scene.add(light);\n\n\n        spotLight = new THREE.SpotLight(0xffffff, 1.5);\n        spotLight.position.set(1.8925437206586615, 6.562070933976482, -6.987850174038494, 1);\n        spotLight.angle = Math.PI / 9;\n        spotLight.penumbra = 0.1;\n        spotLight.decay = 1;\n        spotLight.distance = 0;\n        spotLight.castShadow = true;\n        spotLight.shadow.mapSize.width = 2048;\n        spotLight.shadow.mapSize.height = 2048;\n        spotLight.shadow.camera.near = 0.5;\n        spotLight.shadow.camera.far = 500;\n        spotLight.shadow.focus = 1;\n        spotLight.shadow.radius = 40;\n        scene.add(spotLight);\n\n\n        spotLight2 = new THREE.SpotLight(0xffffff, 1.5);\n        spotLight2.position.set(6.037545724065725, 2.727324217791399, 9.004396247778892);\n        spotLight2.angle = Math.PI / 9;\n        spotLight2.penumbra = 0.1;\n        spotLight2.decay = 1;\n        spotLight2.distance = 0;\n        spotLight2.castShadow = true;\n        spotLight2.shadow.mapSize.width = 2048;\n        spotLight2.shadow.mapSize.height = 2048;\n        spotLight2.shadow.camera.near = 0.5;\n        spotLight2.shadow.camera.far = 500;\n        spotLight2.shadow.focus = 1;\n        spotLight2.shadow.radius = 40;\n        scene.add(spotLight2);\n\n\n        spotLight3 = new THREE.SpotLight(0xffffff, 0.22);\n        spotLight3.position.set(11, 0, 0);\n        spotLight3.angle = Math.PI / 9;\n        spotLight3.penumbra = 0.1;\n        spotLight3.decay = 1;\n        spotLight3.distance = 0;\n        spotLight3.castShadow = false;\n        scene.add(spotLight3);\n\n        const loader = new GLTFLoader().setPath('/themes/custom/autofaq/dist/images/');\n\n        loader.load('scene.glb', function (gltf) {\n          gltf.scene.traverse(function (node) {\n            if (node.isMesh) {\n              node.castShadow = true;\n              node.receiveShadow = true;\n            }\n          });\n          scene.add(gltf.scene);\n        });\n\n\n        window.addEventListener('resize', onWindowResize, false);\n        $('.first-screen__3d-preloader').fadeOut(500);\n        $('#model3d').css('opacity', 1);\n      }\n\n      function onWindowResize() {\n        camera.aspect = 1;\n        camera.updateProjectionMatrix();\n\n        const wrapper = document.getElementById('container3d');\n        renderer.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\n        render();\n      }\n\n\n      function animate() {\n        requestAnimationFrame(animate);\n        render();\n      }\n\n      function render() {\n        scene.traverse(function (child) {\n          if (child.isMesh) {\n            child.rotation.y = (-mouseX * 0.002);\n            child.rotation.z = (-mouseY * 0.001);\n          }\n\n        });\n        renderer.render(scene, camera);\n      }\n\n\n    }\n\n\n    if (window.innerWidth > 1200 && $('#model3d2').length > 0) {\n      let camera2, controls2, scene2, renderer2, spotLight3;\n      init2();\n      animate2();\n\n      function init2() {\n        const container = document.getElementById('model3d2');\n        const wrapper = document.getElementById('container3d2');\n        renderer2 = new THREE.WebGLRenderer({alpha: true, antialias: true});\n        renderer2.setPixelRatio(window.devicePixelRatio);\n        renderer2.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\n        renderer2.setClearColor(0x000000, 0);\n        renderer2.outputEncoding = THREE.sRGBEncoding;\n        renderer2.shadowMap.enabled = true;\n        renderer2.shadowMap.type = THREE.PCFSoftShadowMap;\n        container.appendChild(renderer2.domElement);\n\n        camera2 = new THREE.PerspectiveCamera(45, 1, 0.1, 200);\n        camera2.position.set(2.6, 0, 0);\n        camera2.lookAt(0, 0, 0);\n\n        scene2 = new THREE.Scene();\n\n        const light2 = new THREE.AmbientLight(0x61A1F6, 0.8);\n        scene2.add(light2);\n\n        spotLight3 = new THREE.SpotLight(0xffffff, 1);\n        spotLight3.position.set(5, 0, 0);\n        spotLight3.angle = Math.PI / 10;\n        spotLight3.penumbra = 0.1;\n        spotLight3.decay = 1;\n        spotLight3.distance = 0;\n        spotLight3.castShadow = false;\n        scene2.add(spotLight3);\n\n        const loader = new GLTFLoader().setPath('/themes/custom/autofaq/dist/images/');\n\n        loader.load('earth.glb', function (gltf) {\n          gltf.scene.traverse(function (node) {\n            if (node.isMesh) {\n              node.castShadow = true;\n              node.receiveShadow = true;\n            }\n          });\n          scene2.add(gltf.scene);\n        });\n\n        window.addEventListener('resize', onWindowResize2, false);\n      }\n\n      function onWindowResize2() {\n        camera2.aspect = 1;\n        camera2.updateProjectionMatrix();\n        const wrapper = document.getElementById('container3d2');\n        renderer2.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\n        render2();\n      }\n\n\n      function animate2() {\n        requestAnimationFrame(animate2);\n        render2();\n      }\n\n      function render2() {\n        scene2.traverse(function (child) {\n          if (child.isMesh) {\n            child.rotation.y = (-mouseX * 0.004);\n            //child.rotation.z = ( -mouseY * 0.001 );\n          }\n\n        });\n        renderer2.render(scene2, camera2);\n      }\n    }\n  });\n\n\n  $(document).ready(function () {\n    function toggleInput() {\n      if (this.value) {\n        $(this).parent('.input-wrapper').addClass('active');\n      }\n      else {\n        $(this).parent('.input-wrapper').removeClass('active');\n      }\n    }\n\n    $('.form-item-anim__input, .webform-submission-zaprosit-demo-form .form-item.form-no-label input').each(toggleInput);\n    $('.form-item-anim__input, .webform-submission-zaprosit-demo-form .form-item.form-no-label input').on('input', toggleInput);\n  });\n})(jQuery);"]}