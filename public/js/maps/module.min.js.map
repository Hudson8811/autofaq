{"version":3,"sources":["module.js"],"names":[],"mappingsfile":"../module.min.js","sourcesContent":["import * as THREE from 'three';\r\n//import { RoomEnvironment } from './jsm/environments/RoomEnvironment.js';\r\n//import { OrbitControls } from './jsm/controls/OrbitControls.js';\r\nimport { GLTFLoader } from '../../src/js/libs/jsm/loaders/GLTFLoader.js';\r\n//import { KTX2Loader } from 'js/jsm/loaders/KTX2Loader.js';\r\n//import { MeshoptDecoder } from './jsm/libs/meshopt_decoder.module.js';\r\n\r\nvar mouseX = 0, mouseY = 0;\r\nvar windowHalfX = window.innerWidth / 2;\r\nvar windowHalfY = window.innerHeight / 2;\r\n\r\n(function ($) {\r\n\r\n  $(document).ready(function () {\r\n\r\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\r\n\r\n    function onDocumentMouseMove(event) {\r\n      mouseX = (event.clientX - windowHalfX) / 2;\r\n      mouseY = (event.clientY - windowHalfY) / 2;\r\n    }\r\n\r\n    if (window.innerWidth > 1200 && $('#myTurntable').length > 0) {\r\n      $('#myTurntable').turntable();\r\n    }\r\n\r\n    if (window.innerWidth > 1200 && $('#model3d').length > 0) {\r\n      let camera, controls, scene, renderer;\r\n      let camera2, controls2, scene2, renderer2;\r\n      let spotLight, spotLight2, spotLight3;\r\n      init();\r\n      animate();\r\n\r\n      function init() {\r\n        const container = document.getElementById('model3d');\r\n        const wrapper = document.getElementById('container3d');\r\n        renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\r\n        renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n        renderer.toneMappingExposure = 3;\r\n        renderer.setClearColor(0x000000, 0);\r\n        renderer.outputEncoding = THREE.sRGBEncoding;\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        container.appendChild(renderer.domElement);\r\n\r\n        camera = new THREE.PerspectiveCamera(45, 1, 1, 1000);\r\n        camera.position.set(7.4, 0, 0);\r\n        camera.lookAt(0, 1, 0);\r\n\r\n        scene = new THREE.Scene();\r\n\r\n        const light = new THREE.AmbientLight(0x333333, 0.9);\r\n        scene.add(light);\r\n\r\n\r\n        spotLight = new THREE.SpotLight(0xffffff, 1.5);\r\n        spotLight.position.set(1.8925437206586615, 6.562070933976482, -6.987850174038494, 1);\r\n        spotLight.angle = Math.PI / 9;\r\n        spotLight.penumbra = 0.1;\r\n        spotLight.decay = 1;\r\n        spotLight.distance = 0;\r\n        spotLight.castShadow = true;\r\n        spotLight.shadow.mapSize.width = 2048;\r\n        spotLight.shadow.mapSize.height = 2048;\r\n        spotLight.shadow.camera.near = 0.5;\r\n        spotLight.shadow.camera.far = 500;\r\n        spotLight.shadow.focus = 1;\r\n        spotLight.shadow.radius = 40;\r\n        scene.add(spotLight);\r\n\r\n\r\n        spotLight2 = new THREE.SpotLight(0xffffff, 1.5);\r\n        spotLight2.position.set(6.037545724065725, 2.727324217791399, 9.004396247778892);\r\n        spotLight2.angle = Math.PI / 9;\r\n        spotLight2.penumbra = 0.1;\r\n        spotLight2.decay = 1;\r\n        spotLight2.distance = 0;\r\n        spotLight2.castShadow = true;\r\n        spotLight2.shadow.mapSize.width = 2048;\r\n        spotLight2.shadow.mapSize.height = 2048;\r\n        spotLight2.shadow.camera.near = 0.5;\r\n        spotLight2.shadow.camera.far = 500;\r\n        spotLight2.shadow.focus = 1;\r\n        spotLight2.shadow.radius = 40;\r\n        scene.add(spotLight2);\r\n\r\n\r\n        spotLight3 = new THREE.SpotLight(0xffffff, 0.22);\r\n        spotLight3.position.set(11, 0, 0);\r\n        spotLight3.angle = Math.PI / 9;\r\n        spotLight3.penumbra = 0.1;\r\n        spotLight3.decay = 1;\r\n        spotLight3.distance = 0;\r\n        spotLight3.castShadow = false;\r\n        scene.add(spotLight3);\r\n\r\n        const loader = new GLTFLoader().setPath('/themes/custom/autofaq/dist/images/');\r\n\r\n        loader.load('scene.glb', function (gltf) {\r\n          gltf.scene.traverse(function (node) {\r\n            if (node.isMesh) {\r\n              node.castShadow = true;\r\n              node.receiveShadow = true;\r\n            }\r\n          });\r\n          scene.add(gltf.scene);\r\n        });\r\n\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n        $('.first-screen__3d-preloader').fadeOut(500);\r\n        $('#model3d').css('opacity', 1);\r\n      }\r\n\r\n      function onWindowResize() {\r\n        camera.aspect = 1;\r\n        camera.updateProjectionMatrix();\r\n\r\n        const wrapper = document.getElementById('container3d');\r\n        renderer.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\r\n        render();\r\n      }\r\n\r\n\r\n      function animate() {\r\n        requestAnimationFrame(animate);\r\n        render();\r\n      }\r\n\r\n      function render() {\r\n        scene.traverse(function (child) {\r\n          if (child.isMesh) {\r\n            child.rotation.y = (-mouseX * 0.002);\r\n            child.rotation.z = (-mouseY * 0.001);\r\n          }\r\n\r\n        });\r\n        renderer.render(scene, camera);\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n    if (window.innerWidth > 1200 && $('#model3d2').length > 0) {\r\n      let camera2, controls2, scene2, renderer2, spotLight3;\r\n      init2();\r\n      animate2();\r\n\r\n      function init2() {\r\n        const container = document.getElementById('model3d2');\r\n        const wrapper = document.getElementById('container3d2');\r\n        renderer2 = new THREE.WebGLRenderer({alpha: true, antialias: true});\r\n        renderer2.setPixelRatio(window.devicePixelRatio);\r\n        renderer2.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\r\n        renderer2.setClearColor(0x000000, 0);\r\n        renderer2.outputEncoding = THREE.sRGBEncoding;\r\n        renderer2.shadowMap.enabled = true;\r\n        renderer2.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        container.appendChild(renderer2.domElement);\r\n\r\n        camera2 = new THREE.PerspectiveCamera(45, 1, 0.1, 200);\r\n        camera2.position.set(2.6, 0, 0);\r\n        camera2.lookAt(0, 0, 0);\r\n\r\n        scene2 = new THREE.Scene();\r\n\r\n        const light2 = new THREE.AmbientLight(0x61A1F6, 0.8);\r\n        scene2.add(light2);\r\n\r\n        spotLight3 = new THREE.SpotLight(0xffffff, 1);\r\n        spotLight3.position.set(5, 0, 0);\r\n        spotLight3.angle = Math.PI / 10;\r\n        spotLight3.penumbra = 0.1;\r\n        spotLight3.decay = 1;\r\n        spotLight3.distance = 0;\r\n        spotLight3.castShadow = false;\r\n        scene2.add(spotLight3);\r\n\r\n        const loader = new GLTFLoader().setPath('/themes/custom/autofaq/dist/images/');\r\n\r\n        loader.load('earth.glb', function (gltf) {\r\n          gltf.scene.traverse(function (node) {\r\n            if (node.isMesh) {\r\n              node.castShadow = true;\r\n              node.receiveShadow = true;\r\n            }\r\n          });\r\n          scene2.add(gltf.scene);\r\n        });\r\n\r\n        window.addEventListener('resize', onWindowResize2, false);\r\n      }\r\n\r\n      function onWindowResize2() {\r\n        camera2.aspect = 1;\r\n        camera2.updateProjectionMatrix();\r\n        const wrapper = document.getElementById('container3d2');\r\n        renderer2.setSize(wrapper.offsetWidth, wrapper.offsetWidth);\r\n        render2();\r\n      }\r\n\r\n\r\n      function animate2() {\r\n        requestAnimationFrame(animate2);\r\n        render2();\r\n      }\r\n\r\n      function render2() {\r\n        scene2.traverse(function (child) {\r\n          if (child.isMesh) {\r\n            child.rotation.y = (-mouseX * 0.004);\r\n            //child.rotation.z = ( -mouseY * 0.001 );\r\n          }\r\n\r\n        });\r\n        renderer2.render(scene2, camera2);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  $(document).ready(function () {\r\n\r\n    $('a.chat--open, button.chat--open').click(function () {\r\n      if (typeof autofaq !== 'undefined') {\r\n        autofaq.open();\r\n      }\r\n    });\r\n\r\n    function toggleInput() {\r\n      if (this.value) {\r\n        $(this).parent('.input-wrapper').addClass('active');\r\n      }\r\n      else {\r\n        $(this).parent('.input-wrapper').removeClass('active');\r\n      }\r\n    }\r\n\r\n    $('.form-item-anim__input, .webform-submission-zaprosit-demo-form .form-item.form-no-label input').each(toggleInput);\r\n    $('.form-item-anim__input, .webform-submission-zaprosit-demo-form .form-item.form-no-label input').on('input', toggleInput);\r\n  });\r\n})(jQuery);"]}